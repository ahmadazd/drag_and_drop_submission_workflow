# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pyproject.toml -- Pathogen Datahubs project configuration


[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

## Generic configuration
[project]
name = "ena-drag-and-drop-submission-tool"
dynamic = [
    "version",
]
requires-python = ">= 3.7"
description = "SARS-CoV-2 Drag and Drop submission project -- pipelines to automate the drag and drop SARS-CoV-2 submission"
readme = "README.md"
authors = [
    {name = "Ahmad Zyoud", email = "azyoud@ebi.ac.uk"}, {name = "Zhara Waheed", email = "zahra@ebi.ac.uk"},
]

license = {text = "Apache License 2.0"}
keywords = [
    "SARS-CoV-2 submission",
    "ENA",
    "pathogens",
    "automation",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "requests",
    'importlib-metadata; python_version<"3.8"',
]

[project.scripts]
metadata_submission = "metadata_submission:main"
bulk_webincli = "bulk_webincli:main"
emailer = "d_and_d_emailer:main"
transfer = "transfer_integrity_check:main"


[tool.setuptools]
package-dir = {"" = "scripts"}


[tool.setuptools.packages.find]
where = ["scripts"]  # list of folders that contain the packages (["."] by default)